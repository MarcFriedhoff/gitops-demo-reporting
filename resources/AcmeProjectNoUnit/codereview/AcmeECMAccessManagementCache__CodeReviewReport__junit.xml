<?xml version="1.0" encoding="UTF-8"?><testsuites name="Integration Server Code Review" disabled="15" failures="0" tests="642" time="2.988" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fn="http://www.w3.org/2005/xpath-functions">
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-SP1.1" failures="0" tests="33" time="0.112" name="SP1: Stateless">
        <properties/>
        <testcase time="0.006" classname="ecmaccessmanagementcache.admin.keys:_get" name="Stateless"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Stateless"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Stateless"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:getTopLevelService" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Stateless"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Stateless"/>
        <testcase time="0.021" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Stateless"/>
        <testcase time="0.022" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Stateless"/>
        <testcase time="0.017" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Stateless"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-SP2.1" failures="0" tests="33" time="0.12" name="SP2: Pipeline Save Restore">
        <properties/>
        <testcase time="0.003" classname="ecmaccessmanagementcache.admin.keys:_get" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Pipeline Save Restore"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Pipeline Save Restore"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util:getTopLevelService" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Pipeline Save Restore"/>
        <testcase time="0.017" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Pipeline Save Restore"/>
        <testcase time="0.016" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Pipeline Save Restore"/>
        <testcase time="0.017" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Pipeline Save Restore"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ1.1" failures="0" tests="30" time="0.218" name="FQ1: Pipeline Services">
        <properties/>
        <testcase time="0.054" classname="ecmaccessmanagementcache.admin.keys:_get" name="Pipeline Services"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Pipeline Services"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Pipeline Services"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Pipeline Services"/>
        <testcase time="0.03" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Pipeline Services"/>
        <testcase time="0.028" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Pipeline Services"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Pipeline Services"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Pipeline Services"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Pipeline Services"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Pipeline Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Pipeline Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Pipeline Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Pipeline Services"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Pipeline Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Pipeline Services"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Pipeline Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Pipeline Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Pipeline Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Pipeline Services"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Pipeline Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Pipeline Services"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Pipeline Services"/>
        <testcase time="0.013" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Pipeline Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Pipeline Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Pipeline Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Pipeline Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Pipeline Services"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Pipeline Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Pipeline Services"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Pipeline Services"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ3_v9.1" failures="0" tests="30" time="0.147" name="FQ3_v9: Deprecated Services (v9)">
        <properties/>
        <testcase time="0.006" classname="ecmaccessmanagementcache.admin.keys:_get" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Deprecated Services (v9)"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Deprecated Services (v9)"/>
        <testcase time="0.027" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Deprecated Services (v9)"/>
        <testcase time="0.026" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Deprecated Services (v9)"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Deprecated Services (v9)"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Deprecated Services (v9)"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Deprecated Services (v9)"/>
        <testcase time="0.011" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Deprecated Services (v9)"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ4.1" failures="0" tests="30" time="0.21" name="FQ4: Disabled Services">
        <properties/>
        <testcase time="0.02" classname="ecmaccessmanagementcache.admin.keys:_get" name="Disabled Services"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Disabled Services"/>
        <testcase time="0.008" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Disabled Services"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Disabled Services"/>
        <testcase time="0.04" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Disabled Services"/>
        <testcase time="0.037" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Disabled Services"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Disabled Services"/>
        <testcase time="0.011" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Disabled Services"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Disabled Services"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Disabled Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Disabled Services"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Disabled Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Disabled Services"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Disabled Services"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Disabled Services"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Disabled Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Disabled Services"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Disabled Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Disabled Services"/>
        <testcase time="0.015" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Disabled Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Disabled Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Disabled Services"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Disabled Services"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Disabled Services"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Disabled Services"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ5.1" failures="0" tests="30" time="0.082" name="FQ5: Use of Pub.Storage">
        <properties/>
        <testcase time="0.004" classname="ecmaccessmanagementcache.admin.keys:_get" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Use of Pub.Storage"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Use of Pub.Storage"/>
        <testcase time="0.015" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Use of Pub.Storage"/>
        <testcase time="0.015" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Use of Pub.Storage"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Use of Pub.Storage"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Use of Pub.Storage"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Use of Pub.Storage"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ6.1" failures="0" tests="30" time="0.069" name="FQ6: Debug Log">
        <properties/>
        <testcase time="0.003" classname="ecmaccessmanagementcache.admin.keys:_get" name="Debug Log"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Debug Log"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Debug Log"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Debug Log"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Debug Log"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Debug Log"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Debug Log"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Debug Log"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Debug Log"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Debug Log"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Debug Log"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Debug Log"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Debug Log"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Debug Log"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Debug Log"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ7.1" failures="0" tests="3" time="0.026" name="FQ7: Public Services Try/Catch">
        <properties/>
        <testcase time="0.008" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Public Services Try/Catch"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Public Services Try/Catch"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Public Services Try/Catch"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ8.1" failures="0" tests="1" time="0.002" name="FQ8: Connections Package">
        <properties/>
        <testcase time="0" classname="Connections" name="Connections Package"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ9.1" failures="0" tests="30" time="0.329" name="FQ9: FTP Timeout">
        <properties/>
        <testcase time="0.011" classname="ecmaccessmanagementcache.admin.keys:_get" name="FTP Timeout"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="FTP Timeout"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="FTP Timeout"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="FTP Timeout"/>
        <testcase time="0.072" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="FTP Timeout"/>
        <testcase time="0.064" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="FTP Timeout"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="FTP Timeout"/>
        <testcase time="0.019" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="FTP Timeout"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="FTP Timeout"/>
        <testcase time="0.013" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="FTP Timeout"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="FTP Timeout"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="FTP Timeout"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="FTP Timeout"/>
        <testcase time="0.011" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="FTP Timeout"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="FTP Timeout"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="FTP Timeout"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="FTP Timeout"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="FTP Timeout"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="FTP Timeout"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="FTP Timeout"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="FTP Timeout"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="FTP Timeout"/>
        <testcase time="0.026" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="FTP Timeout"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="FTP Timeout"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="FTP Timeout"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="FTP Timeout"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="FTP Timeout"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="FTP Timeout"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="FTP Timeout"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="FTP Timeout"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ12.1" failures="0" tests="2" time="0.493" name="FQ12: Unauthorised Access/Orphaned">
        <properties/>
        <testcase time="0.49" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Unauthorised Access/Orphaned"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ13.1" failures="0" tests="30" time="0.162" name="FQ13: Branch without switch or evaluate labels">
        <properties/>
        <testcase time="0.007" classname="ecmaccessmanagementcache.admin.keys:_get" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Branch without switch or evaluate labels"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Branch without switch or evaluate labels"/>
        <testcase time="0.033" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Branch without switch or evaluate labels"/>
        <testcase time="0.028" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Branch without switch or evaluate labels"/>
        <testcase time="0.008" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Branch without switch or evaluate labels"/>
        <testcase time="0.017" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Branch without switch or evaluate labels"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Branch without switch or evaluate labels"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ14.1" failures="0" tests="30" time="0.16" name="FQ14: Branch on expression when child step is without specified label or $null">
        <properties/>
        <testcase time="0.006" classname="ecmaccessmanagementcache.admin.keys:_get" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.031" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.028" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.013" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Branch on expression when child step is without specified label or $null"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ15.1" failures="0" tests="30" time="0.144" name="FQ15: Exit Node From Specification">
        <properties/>
        <testcase time="0.005" classname="ecmaccessmanagementcache.admin.keys:_get" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Exit Node From Specification"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Exit Node From Specification"/>
        <testcase time="0.027" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Exit Node From Specification"/>
        <testcase time="0.026" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Exit Node From Specification"/>
        <testcase time="0.008" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Exit Node From Specification"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Exit Node From Specification"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Exit Node From Specification"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Exit Node From Specification"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Exit Node From Specification"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Exit Node From Specification"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ16.1" failures="0" tests="30" time="0.127" name="FQ16: Branch step must have child nodes">
        <properties/>
        <testcase time="0.005" classname="ecmaccessmanagementcache.admin.keys:_get" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Branch step must have child nodes"/>
        <testcase time="0.022" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Branch step must have child nodes"/>
        <testcase time="0.024" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Branch step must have child nodes"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Branch step must have child nodes"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Branch step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Branch step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Branch step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ17.1" failures="0" tests="30" time="0.124" name="FQ17: Loop step must have child nodes">
        <properties/>
        <testcase time="0.004" classname="ecmaccessmanagementcache.admin.keys:_get" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Loop step must have child nodes"/>
        <testcase time="0.025" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Loop step must have child nodes"/>
        <testcase time="0.022" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Loop step must have child nodes"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Loop step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Loop step must have child nodes"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Loop step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Loop step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ18.1" failures="0" tests="30" time="0.125" name="FQ18: Repeat step must have child nodes">
        <properties/>
        <testcase time="0.004" classname="ecmaccessmanagementcache.admin.keys:_get" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Repeat step must have child nodes"/>
        <testcase time="0.022" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Repeat step must have child nodes"/>
        <testcase time="0.026" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Repeat step must have child nodes"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Repeat step must have child nodes"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Repeat step must have child nodes"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Repeat step must have child nodes"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Repeat step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ21.1" failures="0" tests="30" time="0.119" name="FQ21: Loop must have an input array provided">
        <properties/>
        <testcase time="0.003" classname="ecmaccessmanagementcache.admin.keys:_get" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Loop must have an input array provided"/>
        <testcase time="0.022" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Loop must have an input array provided"/>
        <testcase time="0.021" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Loop must have an input array provided"/>
        <testcase time="0.007" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Loop must have an input array provided"/>
        <testcase time="0.01" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationData" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.connectors:UserDataAuthService_getAuthorizationListsForUser" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationData_Response" name="Loop must have an input array provided"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:UserDataAuthService_getAuthorizationListsForUser_Response" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.responseServices:genericFault_Response" name="Loop must have an input array provided"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-FQ22.1" failures="0" tests="25" time="0.141" name="FQ22: Flow service should not be empty">
        <properties/>
        <testcase time="0.006" classname="ecmaccessmanagementcache.admin.keys:_get" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Flow service should not be empty"/>
        <testcase time="0.028" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Flow service should not be empty"/>
        <testcase time="0.026" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Flow service should not be empty"/>
        <testcase time="0.009" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Flow service should not be empty"/>
        <testcase time="0.012" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Flow service should not be empty"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS1.1" failures="0" tests="1" time="0.002" name="NS1: Root Folder Name">
        <properties/>
        <testcase time="0" classname="ecmaccessmanagementcache" name="Root Folder Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS2.1" failures="0" tests="23" time="0.002" name="NS2: Folder Name">
        <properties/>
        <testcase time="0.001" classname="ecmaccessmanagementcache" name="Folder Name"/>
        <testcase time="0" classname="ecmaccessmanagementcache.admin" name="Folder Name"/>
        <testcase time="0" classname="ecmaccessmanagementcache.admin.keys" name="Folder Name"/>
        <testcase time="0" classname="uniqa" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.cache" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.map" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.validation" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.shutdown" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.startup" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util.config" name="Folder Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws" name="Folder Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS4.1" failures="0" tests="5" time="0.002" name="NS4: Package Name">
        <properties/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Package Name"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Package Name"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Package Name"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Package Name"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Package Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS5.1" failures="0" tests="28" time="0.025" name="NS5: Service Name">
        <properties/>
        <testcase time="0.001" classname="ecmaccessmanagementcache.admin.keys:_get" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser" name="Service Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser" name="Service Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser" name="Service Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:init" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initACLs" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initGlobals" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig" name="Service Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:getTopLevelService" name="Service Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween" name="Service Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS6.1" failures="0" tests="7" time="0.003" name="NS6: Document Name">
        <properties/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationFlag" name="Document Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationHeader" name="Document Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationOptOut" name="Document Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc.config:Configuration" name="Document Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthConfig" name="Document Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthService" name="Document Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:UserDataAuthService" name="Document Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS7.1" failures="0" tests="2" time="0.001" name="NS7: Schema Name">
        <properties/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.docTypes:schema_UserDataAuthService" name="Schema Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer.UserDataAuthService_.docTypes:schema_UserDataAuthService_2" name="Schema Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS13.1" failures="0" tests="1" time="0.001" name="NS13: WSD Name">
        <properties/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.ws.consumer:UserDataAuthService" name="WSD Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS15.1" failures="0" tests="15" time="0.009" name="NS15: Document variable name">
        <properties/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationFlag;key" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationFlag;value" name="Document variable name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationHeader;tns:authorization" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationHeader;*body" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationOptOut;tns:authorizationOptOut" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc:AuthorizationOptOut;*body" name="Document variable name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc.config:Configuration;applicationInfo" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:Configuration;UserDataAuthService" name="Document variable name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthConfig;username" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthConfig;services" name="Document variable name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthService;packageName" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:TechUserAuthService;nsNames" name="Document variable name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.doc.config:UserDataAuthService;endpoint" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:UserDataAuthService;user" name="Document variable name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.doc.config:UserDataAuthService;password" name="Document variable name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-NS16.1" failures="0" tests="72" time="0.028" name="NS16: Service Signature Name">
        <properties/>
        <testcase time="0.003" classname="ecmaccessmanagementcache.admin.keys:_get;$resourceID" name="Service Signature Name"/>
        <testcase time="0" classname="ecmaccessmanagementcache.admin.keys:_get;$path" name="Service Signature Name"/>
        <testcase time="0.002" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;explicitAuthUserID" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;authorizationHeader" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;authorizationOptOutHeader" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationData;authorizationFlag" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser;authorizationLists" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.pub:getAuthorizationListsForUser;data" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.pub:isTechnicalUserOnAuthConfig;isOnAuthConfig" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationData;tns:getAuthorizationDataResponse" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser;authorizationLists" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.adapter:callGetAuthorizationListsForUser;tns:getAuthorizationListsForUserResponse" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig;isTechnicalUserOnAuthConfigInput" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig;explicitUserID" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:isTechnicalUserOnAuthConfig;isOnAuthConfig" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData;authorizationHeader" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData:readAuthorizationData;authorizationFlag" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices;configString" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:configStringToServices;services" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig;authUserID" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig;svcName" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig;pkgName" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig;services" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:evalUserAuthConfig;isOnAuthConfig" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser;authUserID" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:getServicesAndOperationsForUser;services" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString;services" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.authorizationData.userAuthConfig:servicesToConfigString;configString" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.cache:resetUserDataAuthServiceCache;resetStatus" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;result" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;transportInfo" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;requestHeaders" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;responseHeaders" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;status" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationDataResponse;statusMessage" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.errorHandling:checkAuthorizationListsForUsersResponse;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;explicitAuthUserID" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;authorizationHeader" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;authorizationOptOutHeader" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationData;authorizationFlag" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser;authorizationLists" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service:getAuthorizationListsForUser;data" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList;structuredData" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.map:mapAuthorizationFlagList;authorizationFlagList" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.service.validation:validateAuthorizationDataInput;userId" name="Service Signature Name"/>
        <testcase time="0.003" classname="uniqa.integration.ecm.accessmanagement.startup:initSchedulers;status" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig;cacheManagerName" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util.config:getCacheConfig;cacheName" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util.config:getConfiguration;configuration" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey;userId" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey;host" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:createCacheKey;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:getTopLevelService;svcName" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:getTopLevelService;pkgName" name="Service Signature Name"/>
        <testcase time="0.001" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween;string" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween;open" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween;close" name="Service Signature Name"/>
        <testcase time="0" classname="uniqa.integration.ecm.accessmanagement.util:substringBetween;string" name="Service Signature Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:05+0000" package="AcmeECMAccessManagementCache" id="AcmeECMAccessManagementCache-MS1.1" failures="0" tests="3" time="0" name="MS1: Non-Production Service Package Suffixes">
        <properties/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Non-Production Service Package Suffixes"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Non-Production Service Package Suffixes"/>
        <testcase time="0" classname="AcmeECMAccessManagementCache" name="Non-Production Service Package Suffixes"/>
    </testsuite>
</testsuites>
