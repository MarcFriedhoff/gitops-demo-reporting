<?xml version="1.0" encoding="UTF-8"?><testsuites name="Integration Server Code Review" disabled="15" failures="48" tests="3188" time="6.842" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fn="http://www.w3.org/2005/xpath-functions">
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-SP1.1" failures="0" tests="212" time="0.204" name="SP1: Stateless">
        <properties/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:addDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:dateCompare" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:diffDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:isLeapYear" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:parseDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:setDate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:appendDocumentLists" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:filterDocumentList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:filterNullDocuments" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getObject" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getSubArray" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:mapDynamic" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:pipelineToDoc" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:pivot" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:sortDocumentList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:splitDocumentList" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:trimDocument" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Environment:GetEnvironment" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:getData" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:setData" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:setProperties" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:checkFileExistence" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileReader" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:closeFileWriter" name="Stateless"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:copyFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:existsFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getFileInfo" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getLastModifiedDate" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getMD5Checksum" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getZipfileContents" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:listFiles" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:openFileReader" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:openFileWriter" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readXkbFileReader" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readlineFileReader" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:rename" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:unzipFiles" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:writeToFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFiles" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFolder" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:createFileParser" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:formatString" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:parseFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:add" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:addList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:divide" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:modInt" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:multiply" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:subtract" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:setResponseBytes" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashset" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:addToHashtable" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createDocHashtable" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createHashset" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createStringHashtable" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:createList" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insert" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:insertList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToDocumentArray" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToStringArray" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getCallingService" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getCallingService_1" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUUID" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUsername" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:invokeService" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:joinThread" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:sleep" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:getErrorCode" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperties" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperty" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:loadProperties" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:del" name="Stateless"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:get" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:put" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:query" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:closeOutputStream" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:capitalizeString" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:createArray" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getSubStringArray" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getSubTable" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:multiConcat" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:sortStringList" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Stateless"/>
        <testcase time="0" classname="DemoProjectGlobal.init:initScheduledServices" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Stateless"/>
        <testcase time="0.001" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Stateless"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-SP2.1" failures="0" tests="212" time="0.309" name="SP2: Pipeline Save Restore">
        <properties/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Pipeline Save Restore"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:addDate" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:dateCompare" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:diffDate" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:isLeapYear" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:parseDate" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:setDate" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:appendDocumentLists" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:filterDocumentList" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:filterNullDocuments" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getObject" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:getString" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getSubArray" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:mapDynamic" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:mergeDocuments" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:pipelineToDoc" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:pivot" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:sortDocumentList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:splitDocumentList" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:trimDocument" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Environment:GetEnvironment" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:getData" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:setData" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:setProperties" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:checkFileExistence" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:closeFileReader" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:closeFileWriter" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:copyFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:existsFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:getFileInfo" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getLastModifiedDate" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:getMD5Checksum" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getZipfileContents" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:listFiles" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:openFileReader" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:openFileWriter" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readXkbFileReader" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readlineFileReader" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:rename" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:unzipFiles" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:writeFileWriter" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:writeToFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:zipFiles" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFolder" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser:createFileParser" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:formatString" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:parseFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:add" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:addList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:divide" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:modInt" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:multiply" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:subtract" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:setResponseBytes" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:addToHashset" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:addToHashtable" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:createDocHashtable" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createHashset" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:createStringHashtable" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:isInHashset" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:createList" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:insert" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.List:insertList" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToDocumentArray" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToStringArray" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:sizeOfList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getCallingService" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getCallingService_1" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUUID" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUsername" name="Pipeline Save Restore"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc:invokeService" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:joinThread" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:sleep" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:threadInvoke" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:getErrorCode" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperties" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Property:getProperty" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:loadProperties" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:del" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:get" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:put" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:closeOutputStream" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:capitalizeString" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:createArray" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:filterNullStrings" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getSubStringArray" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getSubTable" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:multiConcat" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:sortStringList" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:initScheduledServices" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Pipeline Save Restore"/>
        <testcase time="0.001" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Pipeline Save Restore"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ1.1" failures="1" tests="110" time="0.557" name="FQ1: Pipeline Services">
        <properties/>
        <testcase time="0.046" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Pipeline Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Pipeline Services"/>
        <testcase time="0.021" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Pipeline Services"/>
        <testcase time="0.015" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Pipeline Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Pipeline Services"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Pipeline Services"/>
        <testcase time="0.054" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Pipeline Services"/>
        <testcase time="0.015" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Pipeline Services"/>
        <testcase time="0.016" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Pipeline Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Pipeline Services"/>
        <testcase time="0.018" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Pipeline Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Pipeline Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Pipeline Services"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Pipeline Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Pipeline Services">
            <failure message="No Save/Restore/Trace Pipieline services should exist within the flow service.  Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check." type="com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker">No Save/Restore/Trace Pipieline services should exist within the flow service.  Save/Restore pipeline services result in unnecessary I/O and therefore gives a reduced service performance as these services need to read or write to the disk and concurrent service execution could be compromised.  It is recommended to delete these from the services before deployment to a non-development environment to ensure maximum performance.  Alternative to this is to use the pipeline service options from within designer and disable these in the non-development environments as described in the previous check.</failure>
        </testcase>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Pipeline Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Pipeline Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Pipeline Services"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Pipeline Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:del" name="Pipeline Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Storage:get" name="Pipeline Services"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Storage:put" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:query" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Pipeline Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Pipeline Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Pipeline Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Pipeline Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Pipeline Services"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Pipeline Services"/>
        <testcase time="0.01" classname="DemoProjectGlobal.init:initScheduledServices" name="Pipeline Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Pipeline Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Pipeline Services"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ3_v9.1" failures="0" tests="110" time="0.294" name="FQ3_v9: Deprecated Services (v9)">
        <properties/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Deprecated Services (v9)"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Deprecated Services (v9)"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Deprecated Services (v9)"/>
        <testcase time="0.029" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Deprecated Services (v9)"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Deprecated Services (v9)"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Deprecated Services (v9)"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Deprecated Services (v9)"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:zipFiles" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Deprecated Services (v9)"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Storage:get" name="Deprecated Services (v9)"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:put" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Deprecated Services (v9)"/>
        <testcase time="0.006" classname="DemoProjectGlobal.init:initScheduledServices" name="Deprecated Services (v9)"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual:createDBTables" name="Deprecated Services (v9)"/>
        <testcase time="0.005" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Deprecated Services (v9)"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ4.1" failures="1" tests="110" time="0.496" name="FQ4: Disabled Services">
        <properties/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Disabled Services"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Disabled Services"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Disabled Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Disabled Services"/>
        <testcase time="0.068" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Disabled Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Disabled Services">
            <failure message="services should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed." type="com.softwareag.gcs.wm.codereview.operations.FlowXMLXpathChecker">services should be removed to avoid performance issues as the flow is interpreted during execution.  This also results in smaller, more maintainable flow services which result in a better understanding and lower cost of maintenance.  Recommendation is to delete rather than disable any code no longer needed.</failure>
        </testcase>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Disabled Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Disabled Services"/>
        <testcase time="0.026" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Disabled Services"/>
        <testcase time="0.019" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Disabled Services"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Disabled Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Disabled Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Disabled Services"/>
        <testcase time="0.018" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Disabled Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Disabled Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Disabled Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Disabled Services"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Disabled Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Disabled Services"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Disabled Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Disabled Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Disabled Services"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Disabled Services"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Disabled Services"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Disabled Services"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Storage:get" name="Disabled Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Storage:put" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Disabled Services"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Disabled Services"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Disabled Services"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Disabled Services"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Disabled Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.init:initScheduledServices" name="Disabled Services"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Disabled Services"/>
        <testcase time="0.009" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Disabled Services"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ5.1" failures="0" tests="110" time="0.145" name="FQ5: Use of Pub.Storage">
        <properties/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Use of Pub.Storage"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Use of Pub.Storage"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Use of Pub.Storage"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Use of Pub.Storage"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:zipFiles" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:del" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:get" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:put" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:query" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Use of Pub.Storage"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Use of Pub.Storage"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.init:initScheduledServices" name="Use of Pub.Storage"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual:createDBTables" name="Use of Pub.Storage"/>
        <testcase time="0.003" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Use of Pub.Storage"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ6.1" failures="1" tests="110" time="0.155" name="FQ6: Debug Log">
        <properties/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Debug Log"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Debug Log">
            <failure message="Debug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging" type="com.softwareag.gcs.wm.codereview.operations.ServiceUsageChecker">Debug Log services should be removed to avoid performance issues during execution.  Where logging is required, the recommendation is to implement a more general purpose and configurable logging framework to help keep you logs more manageable and separate from product logging</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Debug Log"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Debug Log"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Debug Log"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFiles" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Debug Log"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:del" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:get" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:put" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:query" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Debug Log"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Debug Log"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.init:initScheduledServices" name="Debug Log"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Debug Log"/>
        <testcase time="0.003" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Debug Log"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ8.1" failures="0" tests="1" time="0.002" name="FQ8: Connections Package">
        <properties/>
        <testcase time="0" classname="Connections" name="Connections Package"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ9.1" failures="0" tests="110" time="0.782" name="FQ9: FTP Timeout">
        <properties/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="FTP Timeout"/>
        <testcase time="0.019" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="FTP Timeout"/>
        <testcase time="0.022" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="FTP Timeout"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="FTP Timeout"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="FTP Timeout"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="FTP Timeout"/>
        <testcase time="0.014" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="FTP Timeout"/>
        <testcase time="0.089" classname="DemoProjectGlobal.Util.Config:initGlobal" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:resetCaches" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Database:createDBTables" name="FTP Timeout"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="FTP Timeout"/>
        <testcase time="0.024" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="FTP Timeout"/>
        <testcase time="0.026" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="FTP Timeout"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="FTP Timeout"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="FTP Timeout"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="FTP Timeout"/>
        <testcase time="0.027" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="FTP Timeout"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="FTP Timeout"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:insertEvent" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:queryEvents" name="FTP Timeout"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Excel:createXLS" name="FTP Timeout"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Excel:readXLS" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="FTP Timeout"/>
        <testcase time="0.02" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:moveFile" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:readFile" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:spitFilenames" name="FTP Timeout"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:zipFiles" name="FTP Timeout"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="FTP Timeout"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:min" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="FTP Timeout"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="FTP Timeout"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="FTP Timeout"/>
        <testcase time="0.016" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="FTP Timeout"/>
        <testcase time="0.015" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="FTP Timeout"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="FTP Timeout"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="FTP Timeout"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Storage:del" name="FTP Timeout"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.Storage:get" name="FTP Timeout"/>
        <testcase time="0.018" classname="DemoProjectGlobal.Util.Storage:put" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Storage:query" name="FTP Timeout"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="FTP Timeout"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="FTP Timeout"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="FTP Timeout"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="FTP Timeout"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="FTP Timeout"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="FTP Timeout"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="FTP Timeout"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="FTP Timeout"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="FTP Timeout"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="FTP Timeout"/>
        <testcase time="0.017" classname="DemoProjectGlobal.init:initScheduledServices" name="FTP Timeout"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="FTP Timeout"/>
        <testcase time="0.018" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="FTP Timeout"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ12.1" failures="0" tests="199" time="0.301" name="FQ12: Unauthorised Access/Orphaned">
        <properties/>
        <testcase time="0.277" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:dateCompare" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:isLeapYear" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:parseDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:appendDocumentLists" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:filterNullDocuments" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getObject" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pipelineToDoc" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:trimDocument" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvironment" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:getData" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:setData" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:setProperties" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:checkFileExistence" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileReader" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileWriter" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:copyFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:existsFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getLastModifiedDate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getMD5Checksum" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:listFiles" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:moveFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileReader" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileWriter" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readlineFileReader" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:rename" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:unzipFiles" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeToFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFiles" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFolder" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:createFileParser" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:parseFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:addList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiply" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:setResponseBytes" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashset" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashtable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createDocHashtable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createHashset" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:createList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insert" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insertList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToDocumentArray" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToStringArray" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUUID" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUsername" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:invokeService" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:joinThread" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:sleep" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:getErrorCode" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperties" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:loadProperties" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:del" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:closeOutputStream" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:capitalizeString" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:createArray" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:sortStringList" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Unauthorised Access/Orphaned"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual:createDBTables" name="Unauthorised Access/Orphaned"/>
        <testcase time="0" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Unauthorised Access/Orphaned"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ13.1" failures="0" tests="110" time="0.397" name="FQ13: Branch without switch or evaluate labels">
        <properties/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Branch without switch or evaluate labels"/>
        <testcase time="0.017" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Branch without switch or evaluate labels"/>
        <testcase time="0.016" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Branch without switch or evaluate labels"/>
        <testcase time="0.041" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Branch without switch or evaluate labels"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Branch without switch or evaluate labels"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Branch without switch or evaluate labels"/>
        <testcase time="0.014" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Branch without switch or evaluate labels"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Branch without switch or evaluate labels"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Branch without switch or evaluate labels"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Branch without switch or evaluate labels"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Branch without switch or evaluate labels"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Branch without switch or evaluate labels"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:get" name="Branch without switch or evaluate labels"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Storage:put" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:query" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Branch without switch or evaluate labels"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Branch without switch or evaluate labels"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Branch without switch or evaluate labels"/>
        <testcase time="0.007" classname="DemoProjectGlobal.init:initScheduledServices" name="Branch without switch or evaluate labels"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Branch without switch or evaluate labels"/>
        <testcase time="0.008" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Branch without switch or evaluate labels"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ14.1" failures="0" tests="110" time="0.429" name="FQ14: Branch on expression when child step is without specified label or $null">
        <properties/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.045" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.015" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:readFile" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:del" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Storage:get" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Storage:put" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.01" classname="DemoProjectGlobal.init:initScheduledServices" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Branch on expression when child step is without specified label or $null"/>
        <testcase time="0.01" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Branch on expression when child step is without specified label or $null"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ15.1" failures="0" tests="110" time="0.42" name="FQ15: Exit Node From Specification">
        <properties/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Exit Node From Specification"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Exit Node From Specification"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Exit Node From Specification"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Exit Node From Specification"/>
        <testcase time="0.045" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Exit Node From Specification"/>
        <testcase time="0.014" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Exit Node From Specification"/>
        <testcase time="0.014" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Exit Node From Specification"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Exit Node From Specification"/>
        <testcase time="0.014" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Exit Node From Specification"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Exit Node From Specification"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Exit Node From Specification"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Exit Node From Specification"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Exit Node From Specification"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Exit Node From Specification"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Exit Node From Specification"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Exit Node From Specification"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Exit Node From Specification"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Exit Node From Specification"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Storage:get" name="Exit Node From Specification"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Storage:put" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Exit Node From Specification"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Exit Node From Specification"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Exit Node From Specification"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Exit Node From Specification"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Exit Node From Specification"/>
        <testcase time="0.009" classname="DemoProjectGlobal.init:initScheduledServices" name="Exit Node From Specification"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Exit Node From Specification"/>
        <testcase time="0.009" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Exit Node From Specification"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ16.1" failures="0" tests="110" time="0.352" name="FQ16: Branch step must have child nodes">
        <properties/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Branch step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Branch step must have child nodes"/>
        <testcase time="0.037" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Branch step must have child nodes"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Branch step must have child nodes"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Branch step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Branch step must have child nodes"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Branch step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Branch step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Branch step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:zipFiles" name="Branch step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Branch step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Branch step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Branch step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Branch step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Branch step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Branch step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:get" name="Branch step must have child nodes"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Storage:put" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Branch step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Branch step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Branch step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.init:initScheduledServices" name="Branch step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Branch step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Branch step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ17.1" failures="0" tests="110" time="0.349" name="FQ17: Loop step must have child nodes">
        <properties/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Loop step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Loop step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Loop step must have child nodes"/>
        <testcase time="0.037" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Loop step must have child nodes"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Loop step must have child nodes"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Loop step must have child nodes"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Loop step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Loop step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:zipFiles" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Loop step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Loop step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Loop step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Loop step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Loop step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Loop step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:get" name="Loop step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Storage:put" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:query" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Loop step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Loop step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Loop step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Loop step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Loop step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.init:initScheduledServices" name="Loop step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Loop step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Loop step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ18.1" failures="0" tests="110" time="0.342" name="FQ18: Repeat step must have child nodes">
        <properties/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Repeat step must have child nodes"/>
        <testcase time="0.035" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Repeat step must have child nodes"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Repeat step must have child nodes"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Repeat step must have child nodes"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Repeat step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:moveFile" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:zipFiles" name="Repeat step must have child nodes"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Repeat step must have child nodes"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Repeat step must have child nodes"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:get" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Storage:put" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Repeat step must have child nodes"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.init:initScheduledServices" name="Repeat step must have child nodes"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual:createDBTables" name="Repeat step must have child nodes"/>
        <testcase time="0.008" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Repeat step must have child nodes"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ21.1" failures="0" tests="110" time="0.346" name="FQ21: Loop must have an input array provided">
        <properties/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Loop must have an input array provided"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Loop must have an input array provided"/>
        <testcase time="0.043" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Loop must have an input array provided"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Loop must have an input array provided"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Loop must have an input array provided"/>
        <testcase time="0.012" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Loop must have an input array provided"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Loop must have an input array provided"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Loop must have an input array provided"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Loop must have an input array provided"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Loop must have an input array provided"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Loop must have an input array provided"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Loop must have an input array provided"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Loop must have an input array provided"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:del" name="Loop must have an input array provided"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Storage:get" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Storage:put" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Loop must have an input array provided"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Loop must have an input array provided"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Loop must have an input array provided"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Loop must have an input array provided"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Loop must have an input array provided"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Loop must have an input array provided"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.init:initScheduledServices" name="Loop must have an input array provided"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual:createDBTables" name="Loop must have an input array provided"/>
        <testcase time="0.008" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Loop must have an input array provided"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-FQ22.1" failures="0" tests="110" time="0.412" name="FQ22: Flow service should not be empty">
        <properties/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Flow service should not be empty"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Flow service should not be empty"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Flow service should not be empty"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Flow service should not be empty"/>
        <testcase time="0.042" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Flow service should not be empty"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Flow service should not be empty"/>
        <testcase time="0.013" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Flow service should not be empty"/>
        <testcase time="0.015" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Flow service should not be empty"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Flow service should not be empty"/>
        <testcase time="0.011" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:readFile" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.File:zipFiles" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Flow service should not be empty"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Flow service should not be empty"/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Flow service should not be empty"/>
        <testcase time="0.008" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Flow service should not be empty"/>
        <testcase time="0.009" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Flow service should not be empty"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Storage:del" name="Flow service should not be empty"/>
        <testcase time="0.007" classname="DemoProjectGlobal.Util.Storage:get" name="Flow service should not be empty"/>
        <testcase time="0.01" classname="DemoProjectGlobal.Util.Storage:put" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Storage:query" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Flow service should not be empty"/>
        <testcase time="0.005" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Flow service should not be empty"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Flow service should not be empty"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Flow service should not be empty"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Flow service should not be empty"/>
        <testcase time="0" classname="DemoProjectGlobal.init:init" name="Flow service should not be empty"/>
        <testcase time="0.009" classname="DemoProjectGlobal.init:initScheduledServices" name="Flow service should not be empty"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Flow service should not be empty"/>
        <testcase time="0.01" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Flow service should not be empty"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS1.1" failures="1" tests="1" time="0.002" name="NS1: Root Folder Name">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal" name="Root Folder Name">
            <failure message="Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. &quot;com.softwareag&quot;" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Root Folder should not be the same as the package as this can cause namespace issues should the code need to be refactored or moved to other packages for promotion to common services, inhibiting reusability.  Recommendation is to set a separate prefix folder structure from the package and use this across all packages differentiating below the prefix.  This can be one or two levels deep (but ideally should be no more) and commonly is the inverse domain name of the organisation, e.g. "com.softwareag"</failure>
        </testcase>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS2.1" failures="0" tests="37" time="0.002" name="NS2: Folder Name">
        <properties/>
        <testcase time="0.001" classname="DemoProjectGlobal" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc" name="Folder Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc.global" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc.Admin" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.init" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.initmanual" name="Folder Name"/>
        <testcase time="0" classname="DemoProjectGlobal.scheduler" name="Folder Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS4.1" failures="0" tests="5" time="0.001" name="NS4: Package Name">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal" name="Package Name"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Package Name"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Package Name"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Package Name"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Package Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS5.1" failures="31" tests="212" time="0.378" name="NS5: Service Name">
        <properties/>
        <testcase time="0.006" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigAllAsCSV" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigAllAsSQL" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntries" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntry" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:initGlobal" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:resetCaches" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:updateConfigEntry" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Connection:setConnectionState" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Database:createDBTables" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:executeDBScript" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:addDate" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkDate" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:checkTime" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:dateCompare" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:diffDate" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.DateTime:isLeapYear" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:parseDate" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.DateTime:setDate" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:appendDocumentLists" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:filterDocumentList" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:filterNullDocuments" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:getObject" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:getString" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:getSubArray" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:mapDynamic" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:mergeDocuments" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:pipelineToDoc" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:pivot" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:sortDocumentList" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Document:splitDocumentList" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Document:trimDocument" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Environment:GetEnvironment" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:eventScheduledJob" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:correlateTimeEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createMailEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:createTimeEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:insertEvent" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:queryEvents" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:getData" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:setData" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Excel.Helper:setProperties" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:createXLS" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:readXLS" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:checkFileExistence" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:closeFileReader" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:closeFileWriter" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:copyFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:deleteFile" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:existsFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:getFileInfo" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:getLastModifiedDate" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:getMD5Checksum" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:getZipfileContents" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:listFiles" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:listFilesOlderThan" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:openFileReader" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:openFileWriter" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readXkbFileReader" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:readlineFileReader" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:rename" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:spitFilenames" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:unzipFiles" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:writeFileWriter" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.File:writeToFile" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFiles" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.File:zipFolder" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser:createFileParser" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FileParser:formatString" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FileParser:parseFile" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:add" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FinancialMath:addList" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:divide" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:max" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:modInt" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.FinancialMath:multiply" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.FinancialMath:subtract" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Flow:setResponseBytes" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:addToHashset" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:addToHashtable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:createDocHashtable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:createHashset" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Hash:createStringHashtable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:isInHashset" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.List:createList" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.List:insert" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.List:insertList" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.List:listToDocumentArray" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.List:listToStringArray" name="Service Name"/>
        <testcase time="0.004" classname="DemoProjectGlobal.Util.List:sizeOfList" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getCallingService" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getCallingService_1" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getServerInfo" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getUUID" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:getUsername" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:invokeService" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:joinThread" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:mailByConfig" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:publishAndWait" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Misc:sleep" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Misc:threadInvoke" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Oracle:getErrorCode" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Property:getProperties" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Property:getProperty" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Property:loadProperties" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:CheckRetryException" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteAllRetryEntries" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Retry:RetryEntry" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:del" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:get" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:put" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:query" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:closeOutputStream" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream" name="Service Name"/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:capitalizeString" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:createArray" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:filterNullStrings" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getSubStringArray" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:getSubTable" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:multiConcat" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceAll" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceVariables" name="Service Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Strings:sortStringList" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref" name="Service Name">
            <failure message="Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)" type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Services (Flow, Map Service, OData and Java) conform to naming standards, that is, a service must start with a lower case letter, should be camel case, and contain only alpha numeric characters (with the exception of the generated REST and SOAP services)</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.init:init" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.init:initScheduledServices" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.initmanual:createDBTables" name="Service Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.scheduler:cleanupFolders" name="Service Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS6.1" failures="9" tests="14" time="0.002" name="NS6: Document Name">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry" name="Document Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:UserPref" name="Document Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:Worksheet" name="Document Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:Global" name="Document Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT" name="Document Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Doc:publicHoliday" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Doc:smtpAttachment" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXML" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate" name="Document Name">
            <failure message="Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check." type="com.softwareag.gcs.wm.codereview.operations.NamingStandards">Ensure Document definition names conform to naming standards.  A document name must start with an upper case letter, should be camel case, and contain only alpha numeric characters and the underscore character when absolutely necessary (with the exception of the generated SOAP services). Documents generated from XSDs may be named docTypeRef_* and these are catered for in this check.</failure>
        </testcase>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS8.1" failures="0" tests="2" time="0.001" name="NS8: FlatFile Name">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalDictionary" name="FlatFile Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchema" name="FlatFile Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS11.1" failures="0" tests="57" time="0.001" name="NS11: Adapter Name">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteEvent" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntries" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntriesByInterval" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntriesByIntervalAndProcessModel" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntriesByProcessModel" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntriesByProcessModelAndStepID" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteRetryEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteStorageByKey" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteStorageByProcess" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteTypeMapping" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteUserPref" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteUserPrefsByProject" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteUserPrefsByProjectProperty" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:deleteUserPrefsByUserId" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:insertEvent" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:insertRetryEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:insertStorage" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:insertTypeMapping" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:insertUserPref" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectEvents" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectMaptypeTypeMappings" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectMaptypeTypeMappingsWithFilter" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectPublicHoliday" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectPublicHolidays" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntries" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByInterval" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByIntervalAndProcessModel" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByIntervalExtended" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByProcessInstance" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByProcessModel" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesByProcessModelAndStepId" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntriesDynamic" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectRetryEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectStorageKeyExist" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectStorageOverview" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectStorageValue" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectTypeMapping" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectTypeMappingAll" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectTypeMappingAllOrdered" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectUniqueNumber" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectUserPref" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectUserPrefByUserId" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectUserPrefsByUserIdAndProject" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:selectUserPrefsOverview" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:updateTypeMapping" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:updateUniqueNumber" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Service:updateUserPref" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:deleteConfigEntries" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:deleteConfigEntriesByDomain" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:insertConfigEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:selectConfigAll" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:selectConfigEntries" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:selectConfigEntriesByDomain" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:selectConfigEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:selectConfigProcesses" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:updateConfigEntry" name="Adapter Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:executeDBScriptAdapter" name="Adapter Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS15.1" failures="2" tests="89" time="0.012" name="NS15: Document variable name">
        <properties/>
        <testcase time="0.002" classname="DemoProjectGlobal.Doc:RetryEntry;processInstanceID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry;processInstanceIteration" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry;processStepID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry;processStepIteration" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry;processModel" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:RetryEntry;failedDate" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc:UserPref;project" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:UserPref;userId" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:UserPref;property" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:UserPref;value" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:Worksheet;CellContents" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:Worksheet;Name" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc:eventDefinition;conditions" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;processStepStatus" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;processStatus" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;stepName" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;stepID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;stepstatus" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;true" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;actions" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;mailAction" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;configDomain" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;configProcess" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;publishAction" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;docPath" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;doc" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;processID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:eventDefinition;additionalInfo" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;filenames" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;processType" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;processSubtype" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;correlationID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;additionalInfo" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:filesArrivedTrigger;_env" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc.global:Global;domain" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:Global;process" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:Global;key" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:Global;value" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:Global;description" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;recordWithNoID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;Domain" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;Process" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;Key" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;Value" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc.global:GlobalSchemaDT;Description" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc:pollingConfig;timeIntervall" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;triggerProcessType" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;triggerProcessSubtype" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;pollOn" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;sourceDir" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;targetDir" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;archiveDir" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;signalFileSuffix" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;type" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;sftpServer" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;sftpUsername" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:pollingConfig;sftpTimeout" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:publicHoliday;countryCode" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:publicHoliday;date" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:publicHoliday;description" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Doc:smtpAttachment;contenttype" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:smtpAttachment;content" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:smtpAttachment;filename" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:smtpAttachment;encoding" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:smtpAttachment;charset" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger;processType" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger;processSubtype" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger;correlationID" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger;additionalInfo" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Doc:timeTrigger;_env" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXML;copybook" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXML;@filename" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXML;item" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;@display-length" name="Document variable name">
            <failure message="Ensure variable names within document defintions conform to the naming standards (with the exception of the generated SOAP services).  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present" type="com.softwareag.gcs.wm.codereview.operations.DocumentChecker">Ensure variable names within document defintions conform to the naming standards (with the exception of the generated SOAP services).  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;@level" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;@name" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;@position" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;@storage-length" name="Document variable name">
            <failure message="Ensure variable names within document defintions conform to the naming standards (with the exception of the generated SOAP services).  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present" type="com.softwareag.gcs.wm.codereview.operations.DocumentChecker">Ensure variable names within document defintions conform to the naming standards (with the exception of the generated SOAP services).  Variable names in document definitions must start with a lower case letter, should be camel case, and contain only alpha numeric characters.  Caters for documents generated from XSDs where the document name may contain namespace prefix and use of underscore and hyphen present</failure>
        </testcase>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookXMLItem;item" name="Document variable name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;type" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;fieldDefinition" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;name" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;start" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;length" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;end" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;lengthField" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;recordDelimiter" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;fieldDelimiter" name="Document variable name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:fileTemplate;recordLength" name="Document variable name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-NS16.1" failures="2" tests="851" time="0.14" name="NS16: Service Signature Name">
        <properties/>
        <testcase time="0.003" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties;configValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config.Helper:resolveSystemProperties;configValueResolved" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:deleteConfigEntry;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:deleteConfigEntryByDomain;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries;allowEmpty" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:geDebugLogPackageEntries;result" name="Service Signature Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntries;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntries;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntries;allowEmpty" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntries;result" name="Service Signature Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;allowEmpty" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;ID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;DOMAIN" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;PROCESS" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;CONFIGKEY" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;CONFIGVALUE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesAsList;CONFIGDESCRIPTION" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;id" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;configKey" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;configValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntriesByDomain;configDescription" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntry;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntry;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntry;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntry;default" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntry;value" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Processes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Values" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigEntryTree;Description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:getConfigProcesses;likeDomain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigProcesses;likeProcess" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigProcesses;config" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigProcesses;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getConfigProcesses;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries;allowEmpty" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:getDebugLogGlobalEntries;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:initGlobal;packageName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:initGlobal;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:initGlobal;status" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:insertConfigEntry;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:insertConfigEntry;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:insertConfigEntry;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:insertConfigEntry;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:insertConfigEntry;description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Config:updateConfigEntry;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:updateConfigEntry;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:updateConfigEntry;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:updateConfigEntry;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Config:updateConfigEntry;description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Connection:setConnectionState;aliasName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState;setConnectionState" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState;aliasName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState;connectionState" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Connection:setConnectionState;hasError" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:createDBTables;packageName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:createDBTables;$connectionName" name="Service Signature Name">
            <failure message="Ensure Input/Output variables in service signatures conform to the naming standards (with the exception of the generated SOAP services).  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters" type="com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker">Ensure Input/Output variables in service signatures conform to the naming standards (with the exception of the generated SOAP services).  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Database:executeDBScript;packageName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:executeDBScript;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Database:executeDBScript;$connectionName" name="Service Signature Name">
            <failure message="Ensure Input/Output variables in service signatures conform to the naming standards (with the exception of the generated SOAP services).  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters" type="com.softwareag.gcs.wm.codereview.operations.FlowSignatureChecker">Ensure Input/Output variables in service signatures conform to the naming standards (with the exception of the generated SOAP services).  Variable names in service signatures must start with a lower case letter, should be camel case, and contain only alpha numeric characters</failure>
        </testcase>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:addDate;addDateInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;amount" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;field" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;addDateOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:addDate;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:checkDate;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkDate;pattern" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkDate;valid" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkTime;time" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkTime;pattern" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:checkTime;valid" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:dateCompare;dateCompareInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:dateCompare;date1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:dateCompare;date2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:dateCompare;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:dateCompare;dateCompareOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:dateCompare;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:diffDate;diffDateInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate;date1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate;date2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate;diffDateOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:diffDate;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;countryCode" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;direction" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;initialDistance" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getBusinessDay;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getCurrentDate;currentDate" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek;getDayOfWeekInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek;getDayOfWeekOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getDayOfWeek;dayofweek" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth;yearMonth" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getLastDayOfMonth;lastDayOfMonth" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear;getWeekOfYearInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear;getWeekOfYearOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:getWeekOfYear;weekofyear" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:isLeapYear;isLeapYearInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:isLeapYear;year" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:isLeapYear;isLeapYearOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:isLeapYear;isLeapYear" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:parseDate;parseDateInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:parseDate;dateString" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:parseDate;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:parseDate;parseDateOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:parseDate;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday;countryCode" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHoliday;publicHoliday" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays;countryCode" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:selectPublicHolidays;publicHoliday" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.DateTime:setDate;setDateInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;date" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;dateFormat" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;amount" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;field" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;setDateOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.DateTime:setDate;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:appendDocumentLists;appendDocumentListsInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:appendDocumentLists;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:appendDocumentLists;sublist" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:appendDocumentLists;appendDocumentListsOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:appendDocumentLists;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:filterDocumentList;filterDocumentListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;docs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;filter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;fieldname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;strings" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;operation" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;mode" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;filterDocumentListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;docs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterDocumentList;filteredDocs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterNullDocuments;filterNullDocumentsInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterNullDocuments;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterNullDocuments;filterNullDocumentsOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:filterNullDocuments;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getObject;getObjectInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getObject;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getObject;name" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getObject;getObjectOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getObject;obj" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:getString;getStringInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString;path" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString;getStringOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getString;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;getSubArrayInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;docs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;idxFromStart" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;idxFromEnd" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;getSubArrayOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:getSubArray;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:mapDynamic;mapDynamicInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;input" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;map" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;inFieldname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;outFieldname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;mapDynamicOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mapDynamic;output" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:mergeDocuments;mergeDocumentsInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments;src" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments;dst" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments;mergeDocumentsOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:mergeDocuments;dst" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pipelineToDoc;pipelineToDocOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pipelineToDoc;doc" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:pivot;pivotInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;docs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;idFields" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;targetIdFields" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;subDocName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;pivotOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:pivot;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:sortDocumentList;sortDocumentListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;docs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;sortCriteria" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;fieldname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;direction" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;sortComparator" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;sortDocumentListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:sortDocumentList;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;splitDocumentListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;blocksize" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;splitDocumentListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:splitDocumentList;sublist" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList;table" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList;fieldnames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:stringtableToDocumentList;docs" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Document:trimDocument;trimDocumentInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:trimDocument;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:trimDocument;trimDocumentOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Document:trimDocument;doc" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;GetEnvironmentOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;config.stage" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;config.segment" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;stage_segment" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;LOG_ROOT" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;DATA_ROOT" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvConfig;DATACACHE_ROOT" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvironment;GetEnvironmentOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Environment:GetEnvironment;environment" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;ID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;NAME" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;TRIGGERDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;ADDINFO" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;CREATIONDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:handleEvent;PROCESSID" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction;configDomain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction;configProcess" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction;processID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:mailAction;additionalInfo" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction;docPath" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.EventHandler:publishAction;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:deleteAllEvents;MinDate" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event.TestTools:forceEvent;ProcessId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;MinDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;ProcessId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;ID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;NAME" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;TRIGGERDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;ADDINFO" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;CREATIONDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event.TestTools:selectEvents;PROCESSID" name="Service Signature Name"/>
        <testcase time="0.002" classname="DemoProjectGlobal.Util.Event:createMailEvent;configDomain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createMailEvent;configProcess" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createMailEvent;processID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createMailEvent;reminderDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createMailEvent;additionalInfo" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent;configDomain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent;configProcess" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent;processID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent;referenceDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:createTimeEvent;triggerDoc" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:deleteEvent;eventId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:deleteEvent;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:deleteEvent;count" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Event:insertEvent;triggerDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:insertEvent;name" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:insertEvent;eventDefinition" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;MinDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;ID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;NAME" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;TRIGGERDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;ADDINFO" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;CREATIONDATE" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Event:queryEvents;PROCESSID" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook;closeWorkbookInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:closeWorkbook;workbook" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;createWritableWorkbookInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;outputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;readonlyWorkbook" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;createWritableWorkbookOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;outputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:createWritableWorkbook;writeableWorkbook" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:getData;getDataInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:getData;workbook" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion;getJExcelAPIVersionOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:getJExcelAPIVersion;version" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;openReadonlyWorkbookInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;inputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;bytes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;encoding" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;openReadonlyWorkbookOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:openReadonlyWorkbook;readonlyWorkbook" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:setData;setDataInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:setData;writeableWorkbook" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook;writeWorkbookInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel.Helper:writeWorkbook;writeableWorkbook" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:createXLS;worksheets" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:createXLS;createAs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:createXLS;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:createXLS;bytes" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Excel:readXLS;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:readXLS;inputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:readXLS;bytes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:readXLS;encoding" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Excel:readXLS;worksheets" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:checkFileExistence;fileName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:checkFileExistence;exists" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:checkFileExistence;isDirectory" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileReader;closeFileReaderInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileReader;fileReader" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:closeFileWriter;closeFileWriterInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:closeFileWriter;fileWriter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:copyFile;copyFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:copyFile;source" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:copyFile;target" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFile;deleteFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFile;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFile;deleteFileOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFile;success" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;directory" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;filter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;days" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;hours" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;minutes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:deleteFilesOlderThan;seconds" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:existsFile;existsFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:existsFile;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:existsFile;existsFileOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:existsFile;exists" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getFileInfo;path" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;absolutePath" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;name" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;parent" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;length" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;flags" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;exists" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;isDirectory" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;isAbsolute" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getFileInfo;isFile" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getLastModifiedDate;getLastModifiedDateInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getLastModifiedDate;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getLastModifiedDate;getLastModifiedDateOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getLastModifiedDate;lastModified" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:getMD5Checksum;fileName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getMD5Checksum;md5" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;getZipfileContentsInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;getZipfileContentsOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;contents" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;fullname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;pathname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:getZipfileContents;size" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:listFiles;listFilesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;directory" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;filter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;listFilesOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;fileList" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;fileList_fullpathnames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFiles;numFiles" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;directory" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;filter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;days" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;hours" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;minutes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;seconds" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:listFilesOlderThan;oldFilesList" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:moveFile;source" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:moveFile;target" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileReader;openFileReaderInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileReader;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileReader;openFileReaderOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileReader;fileReader" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:openFileWriter;openFileWriterInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileWriter;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileWriter;overwriteFlag" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileWriter;openFileWriterOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:openFileWriter;fileWriter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readFile;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readFile;encoding" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readFile;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;readXkbFileReaderInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;readSizeKb" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;fileName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;readXkbFileReaderOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;lines" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readXkbFileReader;errMessage" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:readlineFileReader;readlineFileReaderInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readlineFileReader;fileReader" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readlineFileReader;readlineFileReaderOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:readlineFileReader;line" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:rename;renameInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:rename;oldName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:rename;newName" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:spitFilenames;filenames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:spitFilenames;files" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:spitFilenames;name" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:spitFilenames;path" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:unzipFiles;unzipFilesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:unzipFiles;zipfilename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:unzipFiles;targetdir" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:unzipFiles;filenames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:unzipFiles;unzipFilesOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:unzipFiles;filenames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter;writeFileWriterInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter;fileWriter" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter;fileContent" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter;writeFileWriterOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeFileWriter;fileWriter" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:writeToFile;writeToFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeToFile;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeToFile;content" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:writeToFile;overwriteFlag" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.File:zipFiles;filenames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFiles;zipfilename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFiles;withPath" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFolder;zipFolderInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFolder;folderName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFolder;basePath" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.File:zipFolder;zipOutputStream" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate;copyBookXML" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:copyBookToFileTemplate;templateXML" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem;item" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser.Helper:mapItem;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:createFileParser;createFileParserOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:createFileParser;fileParser" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString;formatStringInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString;fileParser" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString;input" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString;formatStringOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:formatString;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FileParser:parseFile;parseFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:parseFile;fileParser" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:parseFile;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:parseFile;maxRecords" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:parseFile;parseFileOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FileParser:parseFile;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:abs;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:abs;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add;addInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add;value1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add;value2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add;addOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:add;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:addList;addListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:addList;values" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:addList;addListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:addList;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:divide;divideInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide;dividend" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide;divisor" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide;decimalPlaces" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide;divideOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:divide;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max;num1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max;num2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:max;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:min;num1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min;num2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:min;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt;modIntInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt;module" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt;modIntOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:modInt;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:multiply;multiplyInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiply;value1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiply;value2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiply;multiplyOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiply;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList;multiplyListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList;values" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList;multiplyListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:multiplyList;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract;subtractInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract;value1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract;value2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract;subtractOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.FinancialMath:subtract;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile;restorePipelineFromFileInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile;fileName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:restorePipelineFromFile;merge" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:savePipelineToFile;fileName" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Flow:setResponseBytes;setResponseBytesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:setResponseBytes;data" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:setResponseBytes;headerFields" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:setResponseBytes;fieldName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Flow:setResponseBytes;fieldValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashset;addToHashsetInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashset;hashset" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashset;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:addToHashtable;addToHashtableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashtable;hashtable" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashtable;object" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:addToHashtable;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createDocHashtable;createDocHashtableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createDocHashtable;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createDocHashtable;keyname" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createDocHashtable;createDocHashtableOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createDocHashtable;hashtable" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createHashset;createHashsetInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createHashset;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createHashset;createHashsetOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createHashset;hashset" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;createStringHashtableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;createStringHashtableOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:createStringHashtable;hashtable" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset;isInHashsetInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset;hashset" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:isInHashset;isInHashsetOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:isInHashset;isInHashset" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable;lookupDocHashtableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable;hashtable" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable;lookupDocHashtableOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupDocHashtable;doc" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable;lookupStringHashtableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable;hashtable" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable;lookupStringHashtableOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Hash:lookupStringHashtable;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:createList;createListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:createList;list" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:insert;insertInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insert;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insert;object" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insertList;insertListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insertList;targetList" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insertList;sourceObjects" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:insertList;sourceList" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToDocumentArray;listToDocumentArrayInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToDocumentArray;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToDocumentArray;listToDocumentArrayOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToDocumentArray;docs" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.List:listToStringArray;listToStringArrayInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToStringArray;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToStringArray;listToStringArrayOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:listToStringArray;strings" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList;sizeOfListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList;sizeOfListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.List:sizeOfList;size" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber;uniqueNumber" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc.Admin:setUniqueNumber;uniqueNumber" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService;getCallingServiceOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService;callingService" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService;callingPackage" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService;callingFolder" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;getCallingService_1Input" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;traceSwitch" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;getCallingService_1Output" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;callingService" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;callingPackage" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;callingFolder" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;callList" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getCallingService_1;stackSize" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getServerInfo;serverName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getServerInfo;serverPort" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUUID;getUUIDOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUUID;uuid" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUniqueNumber;uniqueNumber" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUsername;getUsernameOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:getUsername;username" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:invokeService;invokeServiceInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:invokeService;serviceName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:invokeService;input" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:invokeService;invokeServiceOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:invokeService;output" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:joinThread;joinThreadInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:joinThread;serviceThread" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:joinThread;joinThreadOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:joinThread;pipeline" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:mailByConfig;configDomain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;configProcess" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;params" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;attachments" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;contenttype" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;content" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;encoding" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:mailByConfig;charset" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:publishAndWait;documentTypeName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;document" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;receiveDocumentTypeName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;local" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;waitTimeConfig" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:publishAndWait;default" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Misc:sleep;sleepInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:sleep;milliseconds" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke;threadInvokeInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke;serviceName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke;pipeline" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke;threadInvokeOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Misc:threadInvoke;serviceThread" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Oracle:encodeString;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:encodeString;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:getErrorCode;getErrorCodeInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:getErrorCode;errorMsg" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:getErrorCode;getErrorCodeOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Oracle:getErrorCode;errorCode" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperties;getPropertiesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperties;propertyObject" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperties;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperties;getPropertiesOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperties;properties" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Property:getProperty;getPropertyInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;propertyObject" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;default" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;getPropertyOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:getProperty;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:loadProperties;loadPropertiesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:loadProperties;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:loadProperties;loadPropertiesOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Property:loadProperties;propertyObject" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:CheckRetryException;processInstanceID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:CheckRetryException;doRetry" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval;startTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByInterval;endTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel;startTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByIntervalAndProcessModel;endTimestamp" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModel;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntriesByProcessModelAndStepID;stepID" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry;processInstanceID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:DeleteRetryEntry;stepID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetAllRetryEntries;RetryEntries" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval;startTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval;endTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByInterval;RetryEntries" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel;startTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel;endTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalAndProcessModel;RetryEntries" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended;stepID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended;startTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended;endTimestamp" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByIntervalExtended;RetryEntries" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID;processInstanceID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessInstanceID;RetryEntries" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModel;RetryEntries" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID;processModel" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID;stepID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntriesByProcessModelAndStepID;RetryEntries" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry;processInstanceID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry;stepID" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:GetRetryEntry;RetryEntry" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Retry:InsertRetryEntry;RetryEntry" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Retry:RetryEntry;RetryEntry" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:del;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:del;processName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:del;key" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:get;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;processName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;valueAs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;documentTypeName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:get;bytes" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:put;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;processName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;doc" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:put;bytes" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Storage:query;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;processName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;results" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;processId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;processName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Storage:query;creationDate" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:closeOutputStream;closeOutputStreamInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:closeOutputStream;outputStream" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream;createByteArrayOutputStreamOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createByteArrayOutputStream;outputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream;createFileOutputStreamInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream;append" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream;createFileOutputStreamOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createFileOutputStream;outputStream" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream;createZipOutputStreamInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream;outputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream;createZipOutputStreamOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:createZipOutputStream;zipOutputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes;outputStreamToBytesInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes;byteOutputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes;outputStreamToBytesOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:outputStreamToBytes;bytes" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream;writeToZipOutputStreamInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream;zipOutputStream" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream;filename" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Stream:writeToZipOutputStream;withPath" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:capitalizeString;capitalizeStringInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:capitalizeString;in" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:capitalizeString;capitalizeStringOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:capitalizeString;out" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:createArray;createArrayInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:createArray;arraysize" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:createArray;start" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:createArray;createArrayOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:createArray;array" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings;filterNullStringsInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings;filterNullStringsOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:filterNullStrings;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber;inNumber" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:formatGermanNumber;germanNumber" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath;FilepathAndName" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getFilenameFromPath;Filename" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;getSubStringArrayInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;idxFromStart" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;idxFromEnd" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;getSubStringArrayOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubStringArray;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:getSubTable;getSubTableInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable;table" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable;idxFromStart" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable;idxFromEnd" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable;getSubTableOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:getSubTable;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:multiConcat;multiConcatInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str1" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str2" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str3" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str4" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str5" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str6" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str7" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str8" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;str9" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;multiConcatOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:multiConcat;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceAll;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceAll;variableNames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceAll;variableValues" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceUmlautToEntity;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceVariables;string" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceVariables;variableNames" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceVariables;variableValues" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:replaceVariables;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.Strings:sortStringList;sortStringListInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:sortStringList;list" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:sortStringList;order" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:sortStringList;sortStringListOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.Strings:sortStringList;list" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:deleteTypeMapping;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Processes" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Values" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Key" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Value" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getMappingTree;Description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;default" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMapping;result" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;dstValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappings;description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;srcvalue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;destvalue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;result" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;dstValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:getTypeMappingsWithFilter;description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;destValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:insertTypeMapping;description" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;domain" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;process" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;type" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;srcValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;destValue" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.TypeMapping:updateTypeMapping;description" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref;project" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref;property" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:CheckUserPref;count" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref;project" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPref;property" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProject;project" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty;project" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByProjectProperty;property" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:DeleteUserPrefByUserId;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetAllUserPref;UserPrefs" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref;project" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref;property" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPref;UserPref" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId;GetUserPrefByUserIdInput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId;GetUserPrefByUserIdOutput" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserId;UserPrefs" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject;project" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject;userId" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:GetUserPrefByUserIdAdProject;UserPrefs" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:InsertUserPref;UserPref" name="Service Signature Name"/>
        <testcase time="0" classname="DemoProjectGlobal.Util.UserPrefs:UpdateUserPref;UserPref" name="Service Signature Name"/>
        <testcase time="0.001" classname="DemoProjectGlobal.Util.UserPrefs:WriteUserPref;UserPref" name="Service Signature Name"/>
    </testsuite>
    <testsuite errors="0" hostname="localhost" timestamp="2024-02-27T07:06:15+0000" package="DemoProjectGlobal" id="DemoProjectGlobal-MS1.1" failures="0" tests="3" time="0" name="MS1: Non-Production Service Package Suffixes">
        <properties/>
        <testcase time="0" classname="DemoProjectGlobal" name="Non-Production Service Package Suffixes"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Non-Production Service Package Suffixes"/>
        <testcase time="0" classname="DemoProjectGlobal" name="Non-Production Service Package Suffixes"/>
    </testsuite>
</testsuites>
