// Generated by CodiumAI

import { BuildInfo, BuildSummary, BuildSummaryItem } from "../../shared/models/types";
import fs from 'fs';
import yaml from 'js-yaml';
import { createMessageCardFromTemplate } from '../src/messagecard';

describe('createMessageCardFromTemplate', () => {

    // read default config file and test if it returns the expected output
    it('should return the expected output when given a default config file', async () => {

        let fileContents = '';
        try {
            fileContents = fs.readFileSync('config.yaml', 'utf8');
            console.log("config:" + fileContents);
          } catch (error) {
            // exit here
            console.error("Error reading file:", error);
            return;
          }

        const buildInfo = new BuildInfo("project", "build", true, "repository", "revision");
        buildInfo.tags = ["tag1", "tag2"];
        const codeReviewSummary = new BuildSummaryItem([], "status");
        const unitTestSummary = new BuildSummaryItem([], "status");
        const soapUiTestSummary = new BuildSummaryItem([], "status");
        const buildSummary = new BuildSummary(buildInfo, codeReviewSummary, unitTestSummary, soapUiTestSummary);
        const color = "color";
        const link = "link";
        const activityImage = "activityImage";

        const result = await createMessageCardFromTemplate(fileContents, buildSummary, color, link, activityImage);
        console.log(result);

        //expect(result).toEqual(expectedOutput);
    });
});
